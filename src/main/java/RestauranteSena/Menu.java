/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
// ******************************************* USB ********************************************
package RestauranteSena;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jugo.Jugo;
import platoPrincipal.PlatoPrincipal;
import postre.Postre;
import sopa.Sopa;
import entorno.conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

/**
 *
 * @author SENA
 */
public class Menu extends javax.swing.JFrame {

    static List<PlatoPrincipal> platosPrincipales = frmPlatoPricipal.getPlatosPrincipales();
    static List<Sopa> sopass = frmSopa.getSopitas();
    static List<Jugo> jugoss = frmJugos.getJuguitos();
    static List<Postre> postress = frmPostres.getPostresitos();

    static List<PlatoPrincipal> listMod = new ArrayList<>();
    static List<Sopa> listModSopa = new ArrayList<>();
    static List<Jugo> listModJugo = new ArrayList<>();
    static List<Postre> listModPostre = new ArrayList<>();

    private int registroS = -1;
    private int registroP = -1;
    private int registroJ = -1;
    private int registroPO = -1;
    private int dir;

    public int seleccion;
    String Tnombre = "nombre", Tprecio = "precio", Tcantidad = "cantidad";

    conectar con = new conectar();
    Connection cn = con.conexion();

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        menuEliminar = new javax.swing.JPopupMenu();
        JmenuitemEliminar = new javax.swing.JMenuItem();
        JmenuitemModificar = new javax.swing.JMenuItem();
        jPanelC1 = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        btnplatos = new javax.swing.JButton();
        btnsopas = new javax.swing.JButton();
        btnjugos = new javax.swing.JButton();
        btnpostres = new javax.swing.JButton();
        btnsalir = new javax.swing.JButton();
        jTabbedPanelTablas = new javax.swing.JTabbedPane();
        jScrollPaneSopa = new javax.swing.JScrollPane();
        tablesopa = new javax.swing.JTable();
        jScrollPaneJugo = new javax.swing.JScrollPane();
        tablejugo = new javax.swing.JTable();
        jScrollPanePostre = new javax.swing.JScrollPane();
        tablepostre = new javax.swing.JTable();
        jScrollPanePlatoPrincipal = new javax.swing.JScrollPane();
        tableplatoprincipal = new javax.swing.JTable();
        btnvermenu = new javax.swing.JButton();
        cbxIdioma = new javax.swing.JComboBox<>();
        btncarrito = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();
        jComboBoxIdioma1 = new javax.swing.JComboBox<>();
        btnplatos1 = new javax.swing.JButton();
        btnsopas1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuPlato = new javax.swing.JMenuItem();
        MenuSopa = new javax.swing.JMenuItem();
        MenuJugo = new javax.swing.JMenuItem();
        MenuPostre = new javax.swing.JMenuItem();
        Opciones = new javax.swing.JMenu();
        Salir = new javax.swing.JMenuItem();

        popupMenu1.setLabel("popupMenu1");

        JmenuitemEliminar.setText("Eliminar");
        JmenuitemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmenuitemEliminarActionPerformed(evt);
            }
        });
        menuEliminar.add(JmenuitemEliminar);

        JmenuitemModificar.setText("Modificar");
        JmenuitemModificar.setComponentPopupMenu(menuEliminar);
        JmenuitemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmenuitemModificarActionPerformed(evt);
            }
        });
        menuEliminar.add(JmenuitemModificar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelC1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setBackground(new java.awt.Color(0, 0, 0));
        Titulo.setFont(new java.awt.Font("Elephant", 3, 45)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setText("Menu");
        jPanelC1.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 150, 60));

        btnplatos.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnplatos.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono plato.png")); // NOI18N
        btnplatos.setText("Platos Principales");
        btnplatos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, null));
        btnplatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplatosActionPerformed(evt);
            }
        });
        jPanelC1.add(btnplatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 240, 60));

        btnsopas.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnsopas.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono sopa.png")); // NOI18N
        btnsopas.setText("Sopas ");
        btnsopas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 153, 153), null, null));
        btnsopas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsopasActionPerformed(evt);
            }
        });
        jPanelC1.add(btnsopas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 210, 60));

        btnjugos.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnjugos.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono jugo.png")); // NOI18N
        btnjugos.setText("Jugos");
        btnjugos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnjugos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjugosActionPerformed(evt);
            }
        });
        jPanelC1.add(btnjugos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 210, 60));

        btnpostres.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnpostres.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono postre.png")); // NOI18N
        btnpostres.setText("Postres");
        btnpostres.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnpostres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpostresActionPerformed(evt);
            }
        });
        jPanelC1.add(btnpostres, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 210, 60));

        btnsalir.setFont(new java.awt.Font("Arial Black", 0, 23)); // NOI18N
        btnsalir.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\exit.png")); // NOI18N
        btnsalir.setText("Salir");
        btnsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalirActionPerformed(evt);
            }
        });
        jPanelC1.add(btnsalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 150, 50));

        jTabbedPanelTablas.setBackground(new java.awt.Color(204, 204, 255));

        tablesopa.setBackground(new java.awt.Color(204, 204, 204));
        tablesopa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablesopa.setAutoscrolls(false);
        tablesopa.setComponentPopupMenu(menuEliminar);
        tablesopa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesopaMouseClicked(evt);
            }
        });
        jScrollPaneSopa.setViewportView(tablesopa);

        jTabbedPanelTablas.addTab("Sopas", jScrollPaneSopa);

        tablejugo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablejugo.setComponentPopupMenu(menuEliminar);
        tablejugo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablejugoMouseClicked(evt);
            }
        });
        jScrollPaneJugo.setViewportView(tablejugo);

        jTabbedPanelTablas.addTab("Jugos", jScrollPaneJugo);

        tablepostre.setBackground(new java.awt.Color(204, 204, 204));
        tablepostre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablepostre.setComponentPopupMenu(menuEliminar);
        tablepostre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablepostreMouseClicked(evt);
            }
        });
        jScrollPanePostre.setViewportView(tablepostre);

        jTabbedPanelTablas.addTab("Postres", jScrollPanePostre);

        tableplatoprincipal.setBackground(new java.awt.Color(204, 204, 204));
        tableplatoprincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableplatoprincipal.setComponentPopupMenu(menuEliminar);
        tableplatoprincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableplatoprincipalMouseClicked(evt);
            }
        });
        jScrollPanePlatoPrincipal.setViewportView(tableplatoprincipal);

        jTabbedPanelTablas.addTab("Platos Principales", jScrollPanePlatoPrincipal);

        jPanelC1.add(jTabbedPanelTablas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 330, 310));

        btnvermenu.setFont(new java.awt.Font("Arial Black", 0, 19)); // NOI18N
        btnvermenu.setText("Ver menu");
        btnvermenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvermenuActionPerformed(evt);
            }
        });
        jPanelC1.add(btnvermenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 450, 170, 50));

        cbxIdioma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "Ingles" }));
        cbxIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIdiomaActionPerformed(evt);
            }
        });
        jPanelC1.add(cbxIdioma, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btncarrito.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\carrito.png")); // NOI18N
        btncarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncarritoActionPerformed(evt);
            }
        });
        jPanelC1.add(btncarrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 14, 100, 60));

        fondo.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\fondo general.jpg")); // NOI18N
        jPanelC1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 550));

        jComboBoxIdioma1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Español", "Ingles" }));
        jComboBoxIdioma1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIdioma1ActionPerformed(evt);
            }
        });
        jPanelC1.add(jComboBoxIdioma1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnplatos1.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnplatos1.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono plato.png")); // NOI18N
        btnplatos1.setText("Platos Principales");
        btnplatos1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(102, 102, 102), null, null));
        btnplatos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplatos1ActionPerformed(evt);
            }
        });
        jPanelC1.add(btnplatos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 240, 60));

        btnsopas1.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        btnsopas1.setIcon(new javax.swing.ImageIcon("E:\\RestauranteSena_\\src\\main\\resource\\image 2\\icono sopa.png")); // NOI18N
        btnsopas1.setText("Sopas ");
        btnsopas1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 153, 153), null, null));
        btnsopas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsopas1ActionPerformed(evt);
            }
        });
        jPanelC1.add(btnsopas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 210, 60));

        jMenu1.setText("Menu");

        MenuPlato.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuPlato.setText("Platos Principales");
        MenuPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPlatoActionPerformed(evt);
            }
        });
        jMenu1.add(MenuPlato);

        MenuSopa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuSopa.setText("Sopas");
        MenuSopa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSopaActionPerformed(evt);
            }
        });
        jMenu1.add(MenuSopa);

        MenuJugo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuJugo.setText("Jugos");
        MenuJugo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuJugoActionPerformed(evt);
            }
        });
        jMenu1.add(MenuJugo);

        MenuPostre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuPostre.setText("Postres");
        MenuPostre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPostreActionPerformed(evt);
            }
        });
        jMenu1.add(MenuPostre);

        Opciones.setText("Opciones");

        Salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        Opciones.add(Salir);

        jMenu1.add(Opciones);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelC1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelC1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnplatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplatosActionPerformed
        frmPlatoPricipal platoPrincipal = new frmPlatoPricipal();

        if (seleccion == 1) {

            platoPrincipal.titulo.setText("Main Courses");
            platoPrincipal.nombreplato.setText("Name");
            platoPrincipal.precioplato.setText("Price");
            platoPrincipal.cantidadplato.setText("Amount");
            platoPrincipal.btnRegistrar.setText("Add");
            platoPrincipal.jButtonverconsola.setText("See Console");

        } else if (seleccion == 0) {

            platoPrincipal.titulo.setText("PLATOS PRINCIPALES");
            platoPrincipal.nombreplato.setText("Nombre");
            platoPrincipal.precioplato.setText("Precio");
            platoPrincipal.cantidadplato.setText("Cantidad");
            platoPrincipal.btnRegistrar.setText("Agregar");
            platoPrincipal.jButtonverconsola.setText("Ver Consola");
        }

        platoPrincipal.seleccion = seleccion;
        platoPrincipal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnplatosActionPerformed

    private void btnpostresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpostresActionPerformed

        frmPostres postresito1 = new frmPostres();

        if (seleccion == 1) {

            postresito1.jLabeltitulo.setText("DESSERTS");
            postresito1.jLabelnombre.setText("Name");
            postresito1.jLabelprecio.setText("Price");
            postresito1.jLabelcantidad.setText("Amount");
            postresito1.btnRegistrarPOS.setText("Add");
            postresito1.jButtonverconsola.setText("See Console");

        } else if (seleccion == 0) {

            postresito1.jLabeltitulo.setText("POSTRES");
            postresito1.jLabelnombre.setText("Nombre");
            postresito1.jLabelprecio.setText("Precio");
            postresito1.jLabelcantidad.setText("Cantidad");
            postresito1.btnRegistrarPOS.setText("Agregar");
            postresito1.jButtonverconsola.setText("Ver Consola");
        }

        postresito1.seleccion = seleccion;
        postresito1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnpostresActionPerformed


    private void btnsopasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsopasActionPerformed
        frmSopa sopita = new frmSopa();

        if (seleccion == 1) {

            sopita.titulo.setText("SOUPS");
            sopita.jLabelnombre.setText("Name");
            sopita.jLabelprecio.setText("Price");
            sopita.jLabelcantidad.setText("Amount");
            sopita.btnRegistraragregar.setText("Add");
            sopita.jButtonverConsola.setText("See Console");

        } else if (seleccion == 0) {

            sopita.titulo.setText("SOPAS");
            sopita.jLabelnombre.setText("Nombre");
            sopita.jLabelprecio.setText("Precio");
            sopita.jLabelcantidad.setText("Cantidad");
            sopita.btnRegistraragregar.setText("Agregar");
            sopita.jButtonverConsola.setText("Ver Consola");
        }

        sopita.seleccion = seleccion;
        sopita.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnsopasActionPerformed

    private void btnjugosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjugosActionPerformed
        frmJugos juguitos = new frmJugos();

        if (seleccion == 1) {

            juguitos.jLabeltitulo.setText("JUICES");
            juguitos.jLabelnombre.setText("Name");
            juguitos.jLabelprecio.setText("Price");
            juguitos.jLabelcantidad.setText("Amount");
            juguitos.btnRegistrar.setText("Add");
            juguitos.jButtonverconsola.setText("See Console");

        } else if (seleccion == 0) {

            juguitos.jLabeltitulo.setText("JUGOS");
            juguitos.jLabelnombre.setText("Nombre");
            juguitos.jLabelprecio.setText("Precio");
            juguitos.jLabelcantidad.setText("Cantidad");
            juguitos.btnRegistrar.setText("Agregar");
            juguitos.jButtonverconsola.setText("Ver Consola");
        }

        juguitos.seleccion = seleccion;
        juguitos.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnjugosActionPerformed

    private void btnsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalirActionPerformed

        System.exit(0);
    }//GEN-LAST:event_btnsalirActionPerformed

    private void btnvermenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvermenuActionPerformed
        actualizarDatos();

    }//GEN-LAST:event_btnvermenuActionPerformed

    private void tableplatoprincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableplatoprincipalMouseClicked

        this.registroP = tableplatoprincipal.rowAtPoint(evt.getPoint());
        dir = 1;

    }//GEN-LAST:event_tableplatoprincipalMouseClicked

    private void tablesopaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesopaMouseClicked

        this.registroS = tablesopa.rowAtPoint(evt.getPoint());
        dir = 2;
    }//GEN-LAST:event_tablesopaMouseClicked

    private void tablejugoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablejugoMouseClicked

        this.registroJ = tablejugo.rowAtPoint(evt.getPoint());
        dir = 3;
    }//GEN-LAST:event_tablejugoMouseClicked

    private void tablepostreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablepostreMouseClicked

        this.registroPO = tablepostre.rowAtPoint(evt.getPoint());
        dir = 4;
    }//GEN-LAST:event_tablepostreMouseClicked

    private void MenuSopaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSopaActionPerformed

        frmSopa sopas = new frmSopa();
        sopas.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_MenuSopaActionPerformed

    private void MenuPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPlatoActionPerformed

        frmPlatoPricipal platos = new frmPlatoPricipal();
        platos.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_MenuPlatoActionPerformed

    private void MenuPostreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPostreActionPerformed

        frmPostres postres = new frmPostres();
        postres.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_MenuPostreActionPerformed

    private void MenuJugoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuJugoActionPerformed

        frmJugos jugos = new frmJugos();
        jugos.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_MenuJugoActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed

        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void cbxIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIdiomaActionPerformed

        seleccion = cbxIdioma.getSelectedIndex();
        if (seleccion == 1) {
            this.btnplatos.setText("Main Courses");
            this.btnsopas.setText("Soups");
            this.btnjugos.setText("Juices");
            this.btnpostres.setText("Desserts");
            this.btnsalir.setText("Exit");
//            this.btnEliminar.setText("Delete");
            this.btnvermenu.setText("See Menu");
//            this.btnModificar.setText("Modify");
            this.JmenuitemEliminar.setText("Delete");
            this.JmenuitemModificar.setText("Modify");
            this.jTabbedPanelTablas.addTab("Soups", jScrollPaneSopa);
            this.jTabbedPanelTablas.addTab("Juices", jScrollPaneJugo);
            this.jTabbedPanelTablas.addTab("Desserts", jScrollPanePostre);
            this.jTabbedPanelTablas.addTab("Main Courses", jScrollPanePlatoPrincipal);

            this.Tnombre = "Name";
            this.Tprecio = "Price";
            this.Tcantidad = "Amount";

        } else if (seleccion == 0) {
            this.btnplatos.setText("Platos Principales ");
            this.btnsopas.setText("Sopas");
            this.btnjugos.setText("Jugos");
            this.btnpostres.setText("Postres");
            this.btnsalir.setText("Salir");
//            this.btnEliminar.setText("Eliminar");
            this.btnvermenu.setText("Ver Menu");
            this.JmenuitemEliminar.setText("Eliminar");
            this.JmenuitemModificar.setText("Modificar");
//            this.btnModificar.setText("Modificar");
            this.Tnombre = "Nombre";
            this.Tprecio = "Precio";
            this.Tcantidad = "Cantidad";
        }

        actualizarDatos();
    }//GEN-LAST:event_cbxIdiomaActionPerformed

    private void JmenuitemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmenuitemEliminarActionPerformed

        int confirm = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar el registro?", "mensaje de confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION) {

            switch (dir) {

                case 1:

                    if (registroP >= 0) {

                        try {

                            PreparedStatement ps = cn.prepareStatement("UPDATE platoprincipal SET estado ='I' WHERE id=" + listMod.get(registroP).id);
                            ps.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Eliminacion exitosa");

                        } catch (Exception e) {

                            System.err.println("Error al eliminar " + e);
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "Error, registro no seleccionado");
                    }

                    actualizarDatos();
                    break;

                //***************************************************************
                case 2:

                    if (registroS >= 0) {

                        try {

                            PreparedStatement ps = cn.prepareStatement("UPDATE sopa SET estado ='I' WHERE id=" + listModSopa.get(registroS).id);
                            ps.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Eliminacion exitosa");

                        } catch (Exception e) {

                            System.err.println("Error al eliminar " + e);
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "Error, registro no seleccionado");
                    }
                    actualizarDatos();
                    break;

                //*****************************************************************
                case 3:

                    if (registroJ >= 0) {

                        try {

                            PreparedStatement ps = cn.prepareStatement("UPDATE jugo SET estado ='I' WHERE id=" + listModJugo.get(registroJ).id);
                            ps.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Eliminacion exitosa");

                        } catch (Exception e) {

                            System.err.println("Error al eliminar " + e);
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "Error, registro no seleccionado");
                    }
                    actualizarDatos();
                    break;

                //***********************************************************
                case 4:

                    if (registroPO >= 0) {

                        try {

                            PreparedStatement ps = cn.prepareStatement("UPDATE postre SET estado ='I' WHERE id=" + listModPostre.get(registroPO).id);
                            ps.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Eliminacion exitosa");

                        } catch (Exception e) {

                            System.err.println("Error al eliminar " + e);
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "Error, registro no seleccionado");
                    }

                    actualizarDatos();
                    break;

            }

        }

//       int fila = tableplatoprincipal.getSelectedRow();
//        String eliminable = "";
//        eliminable = tableplatoprincipal.getValueAt(fila, 0).toString();
//        
//
//        if (registroP >= 0) {
//            //codigo de eliminar
//            
//           try {
//                
//                PreparedStatement ps = cn.prepareStatement("DELETE FROM platoprincipal WHERE nombre= '" + eliminable + "'");
//                int respuesta = ps.executeUpdate();
//                
//                if (respuesta > 0) {
//                    JOptionPane.showMessageDialog(null, "Registro Eliminado");
//                    actualizarDatos();
//                }
//                
//            } catch (Exception e) {
//                System.err.println("Error al eliminar" + e);
//            }
//            
//        } else {
//    
//           JOptionPane.showMessageDialog(null, "Eregistro no seleccionado");
//        }

    }//GEN-LAST:event_JmenuitemEliminarActionPerformed

    private void JmenuitemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmenuitemModificarActionPerformed

        switch (dir) {

            case 1:
                
                if (registroP >= 0) {
                    
                    try {
                        
                    frmPlatoPricipal platoPricipal = new frmPlatoPricipal();
                    platoPricipal.setVisible(true);
                    this.setVisible(false);
                    platoPricipal.setRegistroModificar(this.registroP);
                    platoPricipal.setPlatosPrincipales(listMod);
                    platoPricipal.modificarPlato();
                        
                    } catch (Exception e) {
                        
                        System.err.println("Error al modificar " + e);
                    }

                   
                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado un registro");
                }
                
                break;

            case 2:

                if (registroS >= 0) {
                    
                    try {
                        
                    frmSopa sopa = new frmSopa();
                    sopa.setVisible(true);
                    this.setVisible(false);
                    sopa.setRegistroModificarS(this.registroS);
                    sopa.setSopitas(listModSopa);
                    sopa.modificarSopa();
                        
                    } catch (Exception e) {
                        System.err.println("Error al modificar" + e);
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado nuingun registro");
                }
                
                break;

            case 3:

                if (registroJ >= 0) {
                    
                    try {
                        
                    frmJugos Jugos = new frmJugos();
                    Jugos.setVisible(true);
                    this.setVisible(false);
                    Jugos.setRegistroModificarJ(this.registroJ);
                    Jugos.setJuguitos(listModJugo);
                    Jugos.modificarJugo();
                        
                    } catch (Exception e) {
                        System.err.println("Error al modificar" + e);
                    }
                   

                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado nuingun registro");
                }
                
                break;

            case 4:

                if (registroPO >= 0) {
                    
                    
                    try {
                        
                    frmPostres postresitozz = new frmPostres();
                    postresitozz.setVisible(true);
                    this.setVisible(false);
                    postresitozz.setModificarRegistroPOS(registroPO);
                    postresitozz.setPostresitos(listModPostre);
                    postresitozz.modificarPostre();
                        
                    } catch (Exception e) {
                         System.err.println("Error al modificar" + e);
                    }
                   
                    
                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado nuingun registro");
                }
                
                break;
        }
    }//GEN-LAST:event_JmenuitemModificarActionPerformed

    private void btncarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncarritoActionPerformed

        frmfactura factura = new frmfactura();
        factura.setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_btncarritoActionPerformed

    private void jComboBoxIdioma1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIdioma1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIdioma1ActionPerformed

    private void btnplatos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplatos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnplatos1ActionPerformed

    private void btnsopas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsopas1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsopas1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JmenuitemEliminar;
    private javax.swing.JMenuItem JmenuitemModificar;
    private javax.swing.JMenuItem MenuJugo;
    private javax.swing.JMenuItem MenuPlato;
    private javax.swing.JMenuItem MenuPostre;
    private javax.swing.JMenuItem MenuSopa;
    private javax.swing.JMenu Opciones;
    private javax.swing.JMenuItem Salir;
    public javax.swing.JLabel Titulo;
    public javax.swing.JButton btncarrito;
    public javax.swing.JButton btnjugos;
    public javax.swing.JButton btnplatos;
    public javax.swing.JButton btnplatos1;
    public javax.swing.JButton btnpostres;
    public javax.swing.JButton btnsalir;
    public javax.swing.JButton btnsopas;
    public javax.swing.JButton btnsopas1;
    public javax.swing.JButton btnvermenu;
    public javax.swing.JComboBox<String> cbxIdioma;
    private javax.swing.JLabel fondo;
    private javax.swing.JComboBox<String> jComboBoxIdioma1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanelC1;
    private javax.swing.JScrollPane jScrollPaneJugo;
    private javax.swing.JScrollPane jScrollPanePlatoPrincipal;
    private javax.swing.JScrollPane jScrollPanePostre;
    private javax.swing.JScrollPane jScrollPaneSopa;
    public javax.swing.JTabbedPane jTabbedPanelTablas;
    private javax.swing.JPopupMenu menuEliminar;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JTable tablejugo;
    private javax.swing.JTable tableplatoprincipal;
    private javax.swing.JTable tablepostre;
    private javax.swing.JTable tablesopa;
    // End of variables declaration//GEN-END:variables

    private void actualizarDatos() {
        DefaultTableModel modeloPlato = new DefaultTableModel();
        modeloPlato.addColumn(Tnombre);
        modeloPlato.addColumn(Tprecio);
        modeloPlato.addColumn(Tcantidad);

        tableplatoprincipal.setModel(modeloPlato);
        Object O[] = null;

        String sql = "SELECT * FROM platoprincipal WHERE estado ='A'";      //***************REVISAR****************
        String datos[] = new String[3];
        Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                datos[0] = rs.getString(2);
                datos[1] = rs.getString(3);
                datos[2] = rs.getString(4);

                modeloPlato.addRow(datos);
                PlatoPrincipal platoMod = new PlatoPrincipal(rs.getInt("id"), rs.getString("nombre"), rs.getInt("precio"), rs.getInt("cantidad"));
                listMod.add(platoMod);
            }

            listMod.forEach(listMod -> {
                System.out.println(listMod.id + "\t" + listMod.nombrePlato + "\t" + listMod.precio + "\t" + listMod.cantidad);
            });

            tableplatoprincipal.setModel(modeloPlato);

        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla ");
        }

//        for (int i = 0; i < platosPrincipales.size(); i++) {
//            modeloPlato.addRow(O);
//            modeloPlato.setValueAt(platosPrincipales.get(i).nombrePlato, i, 0);
//            modeloPlato.setValueAt(platosPrincipales.get(i).precio, i, 1);                  **********
//            modeloPlato.setValueAt(platosPrincipales.get(i).cantidad, i, 2);
//
//        }
        DefaultTableModel modeloSopa = new DefaultTableModel();
        modeloSopa.addColumn(Tnombre);
        modeloSopa.addColumn(Tprecio);
        modeloSopa.addColumn(Tcantidad);

        tablesopa.setModel(modeloSopa);
        Object O1[] = null;

        String sqlb = "SELECT * FROM sopa WHERE estado ='A'";      //***************REVISAR****************
        String datosb[] = new String[3];
        Statement stb;

        try {

            stb = cn.createStatement();
            ResultSet rs = stb.executeQuery(sqlb);

            while (rs.next()) {

                datosb[0] = rs.getString(2);
                datosb[1] = rs.getString(3);
                datosb[2] = rs.getString(4);

                modeloSopa.addRow(datosb);

                Sopa sopaMod = new Sopa(rs.getInt("id"), rs.getString("nombre"), rs.getInt("precio"), rs.getInt("cantidad"));
                listModSopa.add(sopaMod);

            }

            listModSopa.forEach(listModSopa -> {
                System.out.println(listModSopa.id + "\t" + listModSopa.nombre + "\t" + listModSopa.precio + "\t" + listModSopa.cantidad);
            });

            stb.close();

            tablesopa.setModel(modeloSopa);

        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla ");
        }

//        for (int i = 0; i < sopass.size(); i++) {
//            modeloSopa.addRow(O1);
//            modeloSopa.setValueAt(sopass.get(i).nombre, i, 0);
//            modeloSopa.setValueAt(sopass.get(i).precio, i, 1);
//            modeloSopa.setValueAt(sopass.get(i).cantidad, i, 2);
//        }
        DefaultTableModel modeloJugo = new DefaultTableModel();
        modeloJugo.addColumn(Tnombre);
        modeloJugo.addColumn(Tprecio);
        modeloJugo.addColumn(Tcantidad);

        tablejugo.setModel(modeloJugo);
        Object O2[] = null;

        String sqlc = "SELECT * FROM jugo WHERE estado ='A'";      //***************REVISAR****************
        String datosc[] = new String[3];
        Statement stc;
        try {

            stc = cn.createStatement();
            ResultSet rs = stc.executeQuery(sqlc);

            while (rs.next()) {

                datosc[0] = rs.getString("nombre");
                datosc[1] = rs.getString("precio");
                datosc[2] = rs.getString("cantidad");

                modeloJugo.addRow(datosc);

                Jugo jugoMod = new Jugo(rs.getInt("id"), rs.getString("nombre"), rs.getInt("precio"), rs.getInt("cantidad"));
                listModJugo.add(jugoMod);
            }

            listModJugo.forEach(listModJugo -> {
                System.out.println(listModJugo.id + "\t" + listModJugo.nombre + "\t" + listModJugo.precio + "\t" + listModJugo.cantidad);
            });

            stc.close();
            tablejugo.setModel(modeloJugo);

        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla ");
        }

//        for (int i = 0; i < jugoss.size(); i++) {
//            modeloJugo.addRow(O2);
//            modeloJugo.setValueAt(jugoss.get(i).nombre, i, 0);
//            modeloJugo.setValueAt(jugoss.get(i).precio, i, 1);
//            modeloJugo.setValueAt(jugoss.get(i).cantidad, i, 2);
//        }
        DefaultTableModel modeloPostre = new DefaultTableModel();
        modeloPostre.addColumn(Tnombre);
        modeloPostre.addColumn(Tprecio);
        modeloPostre.addColumn(Tcantidad);

        tablepostre.setModel(modeloPostre);
        Object O3[] = null;

        String sqld = "SELECT * FROM postre WHERE estado ='A'";
        String datosd[] = new String[3];
        Statement std;

        try {

            std = cn.createStatement();
            ResultSet rs = std.executeQuery(sqld);

            while (rs.next()) {

                datosd[0] = rs.getString("nombre");
                datosd[1] = rs.getString("precio");
                datosd[2] = rs.getString("cantidad");

                modeloPostre.addRow(datosd);

                Postre postreMod = new Postre(rs.getInt("id"), rs.getString("nombre"), rs.getInt("precio"), rs.getInt("cantidad"));
                listModPostre.add(postreMod);

            }

            listModPostre.forEach(listModPostre -> {
                System.out.println(listModPostre.id + "\t" + listModPostre.nombre + "\t" + listModPostre.precio + "\t" + listModPostre.cantidad);
            });

            std.close();

            tablepostre.setModel(modeloPostre);

        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla ");
        }

//        for (int i = 0; i < postress.size(); i++) {
//            modeloPostre.addRow(O3);
//            modeloPostre.setValueAt(postress.get(i).nombre, i, 0);
//            modeloPostre.setValueAt(postress.get(i).precio, i, 1);
//            modeloPostre.setValueAt(postress.get(i).cantidad, i, 2);
//        }
    }
}
